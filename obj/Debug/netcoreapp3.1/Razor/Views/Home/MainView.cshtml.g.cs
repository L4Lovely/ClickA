#pragma checksum "C:\Users\Meins\Documents\GitHub\ClickA\Views\Home\MainView.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "745bdd8030a113a822fd931c178d6617827ff995"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_MainView), @"mvc.1.0.view", @"/Views/Home/MainView.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Meins\Documents\GitHub\ClickA\Views\_ViewImports.cshtml"
using ClickA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Meins\Documents\GitHub\ClickA\Views\_ViewImports.cshtml"
using ClickA.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"745bdd8030a113a822fd931c178d6617827ff995", @"/Views/Home/MainView.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"030f26a134178e1a1b0c147015595c84d5dee0ff", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_MainView : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<SaveFileParser>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/mainView.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "745bdd8030a113a822fd931c178d6617827ff9953726", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<div class=""GameStatusHeader"">
    <label class=""CurrencyInfo"" id=""CurrencyLabel"">
        0E
    </label>
</div>

<div class=""GeneratorTab"">
    <button id=""EnergyButton"" class=""EnergyButton"">⚡</button>
</div>

<div class=""ComponentPanel"">
    <div class=""upgradeparentbox"">
        <div class=""upgradebuttonbox"">
            <button id=""ClickPower_Upgrade"" class=""UpgradeButton ClickPower"">⚡</button>

        </div>
        <div class=""upgradelabelbox"">
            <label id=""ClickPowerLabel""");
            BeginWriteAttribute("style", " style=\"", 598, "\"", 606, 0);
            EndWriteAttribute();
            WriteLiteral(">Click Power</label>\r\n\r\n        </div>\r\n        <div class=\"upgradecostinfobox\">\r\n            <label id=\"ClickPowerCostLabel\"");
            BeginWriteAttribute("style", " style=\"", 732, "\"", 740, 0);
            EndWriteAttribute();
            WriteLiteral(@">20E</label>

        </div>
    </div>
     
    <div class=""upgradeparentbox"">
        <div class=""upgradebuttonbox"">
            <button id=""Generator_Upgrade"" class=""UpgradeButton Generator"">G</button>

        </div>
        <div class=""upgradelabelbox"">
            <label id=""GeneratorLabel""");
            BeginWriteAttribute("style", " style=\"", 1050, "\"", 1058, 0);
            EndWriteAttribute();
            WriteLiteral(">Generator</label>\r\n\r\n        </div>\r\n        <div class=\"upgradecostinfobox\">\r\n            <label id=\"GeneratorCostLabel\"");
            BeginWriteAttribute("style", " style=\"", 1181, "\"", 1189, 0);
            EndWriteAttribute();
            WriteLiteral(@">180E</label>

        </div>
    </div>
</div>

<script>

    let ENERGY = 0;
    let PASSIVE_ENERGY = 0;
    let ENERGY_INCVAL = 1;
    let EnergyButton = document.getElementById(""EnergyButton"");
    let CurrencyLabel = document.getElementById(""CurrencyLabel"");

    let ClickPowerButton = document.getElementById(""ClickPower_Upgrade"");
    let ClickPowerCostLabel = document.getElementById(""ClickPowerCostLabel"")
    let ClickPowerLevel = 0;
    let ClickPowerCost = 20;

    let GeneratorUpgradeButton = document.getElementById(""Generator_Upgrade"")
    let GeneratorCostLabel = document.getElementById(""GeneratorCostLabel"")
    let GeneratorLevel = 0;
    let GeneratorUpgradeCost = 180;
    let GeneratorPower = 0;

    EnergyButton.addEventListener('click', () => {
        ENERGY += ENERGY_INCVAL;
        CurrencyLabel.textContent = ENERGY.toString() + ""E"";
    })

    ClickPowerButton.addEventListener('click', () => {
        if (ENERGY >= ClickPowerCost) {
            ClickPowerL");
            WriteLiteral(@"evel += 1;
            ENERGY_INCVAL += 1;             // increase click power by 1
            ENERGY -= ClickPowerCost;       // deduct the cost from currency
            ClickPowerCost *= 2;            // increase upgrade cost
            RefreshCurrency();
            ClickPowerCostLabel.textContent = ClickPowerCost.toString() + ""E"";
        }
    })

    GeneratorUpgradeButton.addEventListener('click', () => {
        if (ENERGY >=  GeneratorUpgradeCost){
            GeneratorLevel += 1;
            ENERGY -= GeneratorUpgradeCost;
            GeneratorPower += 1;
            PASSIVE_ENERGY += 1;
            GeneratorUpgradeCost *= 2;
            RefreshCurrency();
            GeneratorCostLabel.textContent = GeneratorUpgradeCost.toString() + ""E"";
        }
    })

    function RefreshCurrency(){
        CurrencyLabel.textContent = ENERGY.toString() + ""E"";
    }
    function RefreshLabels(){

    }


    setTimeout(cashout_timer, 1000);
    function cashout_timer() {
       ");
            WriteLiteral(@" ENERGY += PASSIVE_ENERGY;
        setTimeout(cashout_timer2, 500);
        RefreshCurrency();
        console.log('TICK')
    }
    function cashout_timer2() {
        console.log('TICK2');
        setTimeout(cashout_timer, 500);
    }

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<SaveFileParser> Html { get; private set; }
    }
}
#pragma warning restore 1591
